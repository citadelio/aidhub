{"version":3,"sources":["components/layouts/AuthLayout.js","components/middlewares/Alert.js","components/Login.js","components/Register.js","App.js","serviceWorker.js","index.js"],"names":["AuthLayout","children","Alert","type","className","Login","history","useHistory","useState","errors","setErrors","setIsLoading","email","password","formData","setFormData","handleChange","e","preventDefault","target","name","value","handleSubmit","a","axios","post","resp","data","token","Cookies","set","expires","push","msg","useEffect","get","to","style","display","justifyContent","width","src","alt","onSubmit","action","autocomplete","param","toUpperCase","onChange","placeholder","Register","showPassword","setShowPassword","phone","window","location","class","id","position","onClick","App","path","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.09b81917.chunk.js","sourcesContent":["import React from 'react'\nimport \"../../assets/dashboard/css/style.css\"\nimport \"../../assets/dashboard/css/responsive.css\"\nimport \"../../assets/dashboard/css/fontawesome.css\"\n\n\nconst AuthLayout = ({children}) => {\n    return (\n        <>\n           {children}\n{/* \n           <footer className=\"main-footer\">\n\t\t\t\t<div className=\"clearfix\">\n\t\t\t\t\t<ul className=\"policy-link clearfix\">\n\t\t\t\t\t\t<li><a href=\"index.html\" className=\"font-fix\">Home</a></li>\n\t\t\t\t\t\t<li><a href=\"#\" className=\"font-fix\">Terms of service</a></li>\n\t\t\t\t\t\t<li><a href=\"#\" className=\"font-fix\">Privacy policy</a></li>\n\t\t\t\t\t</ul>\n\n\t\t\t\t\t<ul className=\"right-widget clearfix\">\n    <li>&copy; {new Date().getFullYear()} Aidhub</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<div className=\"select-box\">\n\t\t\t\t\t\t\t\t<select className=\"theme-dropdown\" tabindex=\"1\">\n\t\t\t\t\t\t\t           <option value=\"English\">English</option>\n\t\t\t\t\t\t\t           <option value=\"Русский\">Русский</option>\n\t\t\t\t\t\t\t           <option value=\"Français\">Français</option>\n\t\t\t\t\t\t\t           <option value=\"Español\">Español</option>\n\t\t\t\t\t\t\t           <option value=\"Deutsch\">Deutsch</option>\n\t\t\t\t\t\t\t           <option value=\"Português\">Português</option>\n\t\t\t\t\t\t   \t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</footer> */}\n        </>\n    )\n}\n\nexport default AuthLayout;\n","import React from 'react'\n\nexport default function Alert({type, children}) {\n    return (\n        <div className={`alert alert-${type}`}>\n            {children}\n        </div>\n    )\n}\n","import React,{useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { Link, useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport Alert from './middlewares/Alert'\n\nexport default function Login() {\n    let history = useHistory();\n    const [errors, setErrors] = useState(null)\n    const [isLoading, setIsLoading] = useState(false)\n    const [formData, setFormData] = useState({\n        email: \"\",\n        password: \"\"\n      })\n\n      const handleChange = e => {\n        e.preventDefault();\n        setErrors(null)\n        setFormData({\n          ...formData,\n          [e.target.name]:e.target.value\n        })\n      }\n\n      const handleSubmit = async e => {\n        e.preventDefault();\n        setIsLoading(true)\n        setErrors(null)\n        try{\n          const resp = await axios.post(\"/auth/login\", formData);\n          const {errors, token} = resp.data;\n          if(errors){ setIsLoading(false);\n            setErrors(errors); return;}\n            Cookies.set('TOKEN', token, {expires: 30});\n            history.push(\"/dashboard\")\n        }catch(err){\n          setErrors([\n            {\n              msg: \"An error occured with the server, Try again.\"\n            }\n          ])\n          setIsLoading(false)\n        }\n    \n      }\n      useEffect(() => {\n        if (Cookies.get(\"TOKEN\") !== null) {\n          let token = Cookies.get(\"TOKEN\");\n          if (typeof token !== \"undefined\" && token !== null) {\n            history.push(\"/dashboard\");\n          }\n        }\n      }, []);\n    return (\n        <div className=\"main-page-wrapper user-access-page\">\n\n\n        <div className=\"main-container\">\n            <div className=\"inner-box\">\n                <div className=\"logo\">\n                    <Link to=\"/\" style={{display:\"flex\", justifyContent:\"center\"}}>\n                    <img style={{width:\"50%\"}} src=\"https://res.cloudinary.com/citadel/image/upload/v1594980481/aidhub-logo-dark_eewgkw.png\" alt=\"\"/>\n                    </Link>\n                    </div>\n                <form onSubmit={handleSubmit} action=\"#\" className=\"login-form\" autocomplete=\"off\">\n                {errors ? (\n              <Alert type=\"danger\">\n                {errors[0].msg  + (errors[0].param? \": \"+errors[0].param.toUpperCase():\"\")}\n              </Alert>) : \"\"}\n                    <input onChange={handleChange} type=\"email\" name=\"email\" placeholder=\"Email\"/>\n                    <input onChange={handleChange} type=\"password\" name=\"password\" placeholder=\"Password\"/>\n                    <button className=\"theme-button\"><span></span>Login</button>\n                </form>\n                <div className=\"text-center\">\n                    <Link to=\"/forgot-password\" className=\"forget-pass-link font-fix\">Forgot your password?</Link>\n                </div>\n            </div> \n            <Link to=\"/register\" className=\"create-new-account\">Create an account</Link>\n        </div> \n        </div>\n    )\n}\n","import React,{useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { Link, useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport Alert from './middlewares/Alert'\n\nexport default function Register() {\n    let history = useHistory();\n    const [isLoading, setIsLoading] = useState(false)\n    const [errors, setErrors] = useState(null)\n    const [showPassword, setShowPassword] = useState(false)\n    const [formData, setFormData] = useState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      password: \"\"\n    })\n\n    const handleChange = e => {\n        e.preventDefault();\n        setErrors(null)\n        setFormData({\n          ...formData,\n          [e.target.name]:e.target.value\n        })\n      }\n\n      const handleSubmit = async e => {\n        e.preventDefault();\n        setIsLoading(true)\n        setErrors(null)\n        try{\n          const resp = await axios.post(\"/auth/register\", formData);\n          setIsLoading(false);\n          const {errors, token} = resp.data;\n          if(errors){ setErrors(errors); return;}\n            Cookies.set('TOKEN', token, {expires: 30});\n            window.location = \"/feed\"\n            // history.push(\"/dashboard\")\n        }catch(err){\n          setErrors([\n            {\n              msg: \"An error occured with the server, Try again.\"\n            }\n          ])\n          setIsLoading(false)\n        }\n    \n      }\n\n\n    return (\n        <div class=\"main-page-wrapper user-access-page\">\n\n\n        <div class=\"main-container\">\n            <div class=\"inner-box\">\n            <div className=\"logo\">\n                    <Link to=\"/\" style={{display:\"flex\", justifyContent:\"center\"}}>\n                    <img style={{width:\"50%\"}} src=\"https://res.cloudinary.com/citadel/image/upload/v1594980481/aidhub-logo-dark_eewgkw.png\" alt=\"\"/>\n                    </Link>\n                    </div>\n                <h4 class=\"main-title\">Create your account</h4>\n                <form onSubmit={handleSubmit} action=\"#\" class=\"sign-up-form\" autocomplete=\"off\">\n                    <input onChange={handleChange} type=\"text\" name=\"name\" placeholder=\"Full Name\"/>\n                    <input onChange={handleChange} type=\"email\" name=\"email\" placeholder=\"Email\"/>\n                    <input onChange={handleChange} id=\"phone\" name=\"phone\" type=\"text\" placeholder=\"Phone\"/>\n\n                    \n                    \n\n                <div style={{position:\"relative\"}}>\n                    <input onChange={handleChange} type={showPassword ? \"text\" : \"password\"}  name=\"password\" value={formData.password} placeholder=\"Password\"/>\n                    <i onClick={()=>setShowPassword(!showPassword)} className={showPassword ? \"passwordRevealIcon fa fa-eye-slash\" : \"passwordRevealIcon fa fa-eye\"}></i>\n                    <p class=\"password-text\">Your password should have at least 6 characters</p>\n                </div>\n                    <button class=\"theme-button\"><span></span>Create account</button>\n                </form>\n                <div class=\"condition-text font-fix\">By clicking 'Create account' you agree to our<Link to=\"/TOS\">Terms of service</Link> and <Link to=\"/privacy-policy\">Privacy policy</Link>.</div>\n            </div>\n\n            <div class=\"text-center\">\n                <Link to=\"/login\" class=\"additional-link-text font-fix\">Already have an account?</Link>\n            </div>\n        </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport AuthLayout from './components/layouts/AuthLayout';\nimport Login from './components/Login';\nimport Register from './components/Register';\n\nconst App = () => {\n    return (\n      <Router>\n      <Switch>\n      <Route path=\"/\" exact>\n          <AuthLayout><Login/></AuthLayout>\n      </Route>\n      <Route path=\"/login\" exact>\n          <AuthLayout><Login/></AuthLayout>\n      </Route>\n      <Route path=\"/register\" exact>\n          <AuthLayout><Register/></AuthLayout>\n      </Route>\n\n      </Switch>\n      </Router>\n    )\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}